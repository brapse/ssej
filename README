SSEJ
====

Pronouced "essay"

# Maps
$ ssej -m 'line.length' haystack.log

# Parsers
$ ssej -p JSON.parse -m Object.keys(line)  haystack.log

# Filters
$ ssej -parser JSON.parse --filter 'line.indexOf('needle')' --map 'line.length' haystack.log
$ ssej --filter line.event=="CLICK"

# Group
$ ssej -g line.event=="CLICK"

# Count
$ ssej --count vent.event hatstack.log
$ ssej --count '[json.event_type, json.referer].join("-")' haystack.log


TODO


TODO
----
Default parser, 
- get each line, Json.parse [DONE]
- Aggregation: [DONE]
  - count, sum, etc [DONE]
- Reduce [DONE]
- Custom accumulation [DONE]
- General command line option parser [DONE]
- Option loading from dotfiles
    - Modules with support functions
- JOIN
